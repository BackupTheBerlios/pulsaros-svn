#!/bin/bash

#
# update - Update PulsarOS to a newer version
#

UPDATE_HOME="/pulsarroot"
BACKUP_DIR=$1
#MIRROR="http://download.berlios.de/pulsaros"
MIRROR="http://10.0.2.2/~tbrandstetter/pulsaros"

post_cleanup()
{
  for i in `cd ${UPDATE_HOME} && ls -l latest* | awk '{print $9}'`; do
    rm ${UPDATE_HOME}/${i}
  done
}

# check syntax
[ "$1" = "help" ] && echo "Syntax: update [backup dir]" && exit 1

#
# check if the dns settings are correct
#
[[ ! -f /etc/resolv.conf || ! -f /etc/nsswitch.conf ]] && printf "resolv.conf or nsswitch.conf missing!\n" && exit 1
[[ `grep -wc nameserver /etc/resolv.conf` = 0 || `grep -wc dns /etc/nsswitch.conf` = 0 ]] &&  printf "DNS lookup failed!.\n" && exit 1

#
# backup
#
if [ $# = 1 ]; then
  printf "Create backup \n"
  [ ! -d $1 ] && mkdir $BACKUP_DIR
  cd /usr && tar -cf $BACKUP_DIR/backup_usr.tar .
  cp $UPDATE_HOME/boot/os.gz $UPDATE_HOME/boot/os_backup.gz
  cp $UPDATE_HOME/boot/platform/i86pc/kernel/unix $UPDATE_HOME/boot/platform/i86pc/kernel/unix_backup
fi

#
# check if updates are available
#
post_cleanup
cd $UPDATE_HOME
CURRENT_SYS=`uname -a | awk '{print $4}'`
wget -q ${MIRROR}/latest.update
if [ `cat latest.update` != $CURRENT_SYS ]; then
  printf "\nUpdates available! Downloading Updates ... \n"
  [ -z `wget -q ${MIRROR}/latest.tar.gz` ] && gzip -d $UPDATE_HOME/latest.tar.gz
  printf "Download complete - installing updates \n"
  mkdir /tmp/usr && cd /tmp/usr
  tar -xf $UPDATE_HOME/latest.tar ./bin/alias ./bin/mv ./bin/cp ./bin/rm ./bin/cd ./bin/gzip ./sbin/tar
  PATH=$PATH:/tmp/usr/bin:/tmp/usr/sbin && export PATH
  if [ -d /tmp/usr/bin ]; then 
    rm -r /usr/*
    cd /usr && tar -xf $UPDATE_HOME/latest.tar
    mv os.gz $UPDATE_HOME/boot/
    mv unix $UPDATE_HOME/boot/platform/i86pc/kernel/
    mv corebin/* $UPDATE_HOME/bin/ && rm -r corebin
    $UPDATE_HOME/bin/changeconfig
    rm $UPDATE_HOME/latest.tar $UPDATE_HOME/latest.update && rm -r /tmp/usr
    if [ `grep -c "PulsarOS restore mode" $UPDATE_HOME/boot/grub/menu.lst` = 0 ]; then
      echo "" >> $UPDATE_HOME/boot/grub/menu.lst
      echo "title PulsarOS restore mode" >> $UPDATE_HOME/boot/grub/menu.lst
	  echo "kernel /boot/platform/i86pc/kernel/unix_backup -v" >> $UPDATE_HOME/boot/grub/menu.lst
	  echo "module /boot/os_backup.gz" >> $UPDATE_HOME/boot/grub/menu.lst
	fi 
  	printf "Update installed! If there is any problem, reboot in restore mode and run --> restore 'backupdir' ! \n\n"
  else
    printf "There is something wrong with the update archives! Please try it again!"
    exit 1
  fi
else 
  printf "No new updates available!"
fi
exit 0